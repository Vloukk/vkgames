import { create } from "zustand";
import { supabase } from "@/utils/supabaseClient";

const useGameStore = create((set, get) => ({
  game: null,

  setGame: (newGame) => {
    console.log("üîÑ [DEBUG] Mise √† jour de game dans Zustand :", newGame);
    console.log("üéØ [DEBUG] selectedThemes mis √† jour :", newGame.rules?.selectedThemes);
    set({ game: newGame });
  },  

  pseudo: "", // ‚úÖ Ajout d'un √©tat pour le pseudo

  setPseudo: (pseudo) => { // ‚úÖ Correction de l'erreur "setPseudo is not a function"
    console.log("üìù [DEBUG] Mise √† jour du pseudo dans Zustand :", pseudo);

    if (typeof window !== "undefined") {
      localStorage.setItem("pseudo", pseudo);
    }

    set({ pseudo });
  },

  subscribeToGameUpdates: async (gameId) => {
    if (!gameId) return;
  
    console.log("üì° [DEBUG] Abonnement Realtime pour le jeu :", gameId);
  
    // üîÑ R√©cup√©rer le jeu imm√©diatement au chargement
    const { data: initialGame, error: gameError } = await supabase
      .from("games")
      .select("*")
      .eq("id", gameId)
      .single();
  
    if (gameError) {
      console.error("‚ùå [ERROR] Impossible de r√©cup√©rer le jeu :", gameError);
    } else {
      console.log("‚úÖ [DEBUG] Game r√©cup√©r√© au chargement :", initialGame);
      set({ game: initialGame }); // Mise √† jour imm√©diate de Zustand
    }
  
    // üîÑ Activer l'√©coute en temps r√©el avec la **nouvelle API**
    const gameListener = supabase
      .channel(`game_${gameId}`)
      .on(
        "postgres_changes", 
        { event: "UPDATE", schema: "public", table: "games", filter: `id=eq.${gameId}` }, 
        (payload) => {
          console.log("üü¢ [REALTIME] Mise √† jour d√©tect√©e :", payload.new);
          
          if (!payload.new) {
            console.error("‚ùå [ERROR] Donn√©es de mise √† jour invalides :", payload);
            return;
          }
  
          set({ game: payload.new });
        }
      )
      .subscribe();
  
    return () => {
      console.log("‚ùå [DEBUG] D√©sabonnement du jeu :", gameId);
      supabase.removeChannel(gameListener);
    };
  },  
}));

export default useGameStore;
